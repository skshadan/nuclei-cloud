## Dockerfile for full backend (Go API + static web)
# --- Go builder ---
FROM golang:1.21-alpine AS go-builder
RUN apk add --no-cache git ca-certificates
WORKDIR /app
# Go modules first for better layer cache
COPY go.mod go.sum ./
RUN go mod download
# Copy source
COPY cmd/ ./cmd/
COPY pkg/ ./pkg/
# Build binary
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags='-s -w' -o main ./cmd/main.go

# --- Final runtime ---
FROM alpine:latest
RUN apk --no-cache add ca-certificates curl
WORKDIR /app
# Copy API binary
COPY --from=go-builder /app/main ./main
# Copy static web assets
COPY web/dist/ ./web/dist/
# Copy scripts if present
COPY scripts/ ./scripts/
RUN chmod -R a+rX /app && chmod -R a+rx /app/scripts 2>/dev/null || true
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=5 CMD curl -fsS http://localhost:8080/health || exit 1
CMD ["/app/main"]
